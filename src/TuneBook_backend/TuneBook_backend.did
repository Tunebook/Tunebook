type Profile = record {
    "principal": text;
    "username": text;
    "avatar": blob;
    "pob": text;
    "instruments": text;
    "bio": opt text;          
    "friends": vec text;
    "incoming_fr": vec Friend;
    "outcoming_fr": vec Friend;
};

type Tune = record {
    "origin": bool;
    "title": text;
    "tune_data": opt text;
    "timestamp": nat64;
    "principals": vec text;
    "username": opt text;
};

type Session = record {
    "id": nat32;
    "principal": text;
    "username": text;
    "name": text;
    "location": text;
    "daytime": text;
    "contact": text;
    "comment": text;
    "recurring": text;
};

type Friend = record {
    "principal": text;
    "avatar": blob;
    "username": text;
};

type Tuneinfo = record {
    "title": text;
    "tune_data": text;
    "username": opt text;
};

type Instrument = record {
    "id": nat32;
    "seller_principal": text;
    "buyer_principal": text;
    "username": text;
    "name": text;
    "location": text;
    "product": text;
    "comment": text;
    "price": text;
    "photos": vec blob;
};

type Forum = record {
    "id": nat64;
    "poster_principal": text;
    "username": text;
    "forum_name": text;
    "forum_comment": text;
    "principals": vec text;
    "created_at": nat64;
    "last_updated_at": opt nat64;
    "threads": opt vec nat64;   
};

type ForumData = record {
    "id": nat64;
    "forum_id": opt nat64;
    "username": text;
    "forum_comment": text;
    "principal": text;
    "created_at": nat64;
    "updated_at": opt nat64;
    "photos": opt vec blob;
    "likes": nat32;
};



service : (nat64) -> {
    "authentication": (text) -> (opt Profile) query;
    "update_profile": (text, text, text, text, text, blob) -> (Profile);
    "get_original_tune_list": (int32) -> (vec text, int32) query;
    "get_original_tune": (text) -> (text) query;
    "get_user_tune_list": (text, int32) -> (vec Tuneinfo, int32) query;
    "get_user_tune": (text, text) -> (text) query;
    "add_tune": (text, text, text, bool, text) -> (bool);
    "update_tune": (text, text, text, bool, text) -> (bool);
    "get_friends": (text) -> (vec Friend) query;
    "send_friend_request": (text, text) -> (opt Friend);
    "accept_friend_request": (text, text)-> (bool);
    "cancel_friend_request": (text, text)-> (bool);
    "filter_tunes": (text, text, text, int32) -> (vec Tuneinfo, int32) query;
    "browse_people": (text, text, int32) -> (vec Friend, int32) query;
    "get_new_tunes_from_friends": (text) -> (vec Tune) query;
    "get_sessions": (text, int32) -> (vec Session, int32) query;
    "add_session": (text, text, text, text, text, text, text, text) -> (bool);
    "update_session": (nat32, text, text, text, text, text, text, text, text) -> (bool);
    "delete_session": (nat32, text) -> (bool); 
    "get_profile_count": () -> (nat64) query;
    "get_tune_count": () -> (nat64) query;
    "get_session_count": () -> (nat64) query;
    "remove_tune": (text, text) -> (bool);
    "add_instrument": (text, text, text, text, text, text, text, text, vec blob) -> (bool);
    "get_instruments": (text, int32) -> (vec Instrument, int32) query;
    "delete_instrument": (nat32, text) -> (bool); 

    
    "get_forums": (text, int32) -> (vec Forum, int32) query;                           
    "add_forum": (text, text, text, text) -> (bool);                                   
    "add_post_to_forum": (nat64, text, text, text, vec blob) -> (bool);        
    "get_forum_posts": (nat64, int32) -> (vec ForumData, int32) query;                 
    "like_post": (nat64, text) -> (bool);                                              
    "update_forum_post": (nat64, text, opt text, opt vec blob) -> (bool);          
    "delete_forum": (nat64, text) -> (bool);                                           
    "delete_post": (nat64, text) -> (bool);        
    "get_post_photos": (nat64) -> (vec blob) query;
    "get_forum_posts_without_photos": (nat64, int32) -> (vec ForumData, int32) query; 

}

